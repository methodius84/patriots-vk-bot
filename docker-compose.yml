version: '3.8'
volumes:
    data:
services:
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
        - "start"
        - "dev"
        - "--config"
        - "/etc/ngrok.yml"
    volumes:
        - ${HOME_DIR}/.config/ngrok/ngrok.yml:/etc/ngrok.yml
    networks:
        - internal
    ports:
        - "4040:4040"
  app:
    build:
      context: docker/php/
      dockerfile: Dockerfile
      # убрать и тут и в докерфайле
      args:
          user: bot
          uid: 1000
    image: patriots-vk-bot
    container_name: app
    working_dir: /var/www/patriots-vk-bot
    volumes:
      - ./:/var/www/patriots-vk-bot
    networks:
      - internal
    restart: unless-stopped
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
        - ./:/var/www/patriots-vk-bot
        - ./docker/nginx/:/etc/nginx/conf.d
    ports:
      - "8000:80"
    networks:
      - internal
    depends_on:
      - app
    restart: unless-stopped
  db:
    image: mysql:8.0
    container_name: patriots_bot_db
    ports:
        - "3306:3306"
    volumes:
        - data:/var/lib/mysql
    environment:
        MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_USER: ${DB_USERNAME}
        MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
        - internal
  cache:
    image: redis:latest
    container_name: redis
    ports:
        - "6379:6379"
    networks:
        - internal
networks:
  internal:
    driver: bridge
